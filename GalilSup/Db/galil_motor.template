# $File: //ASP/Dev/SBS/4_Controls/4_3_Network_Infrastructure/4_3_1_Comms_Common_Services/sw/device_drivers/Galil/1-5/galilSup/Db/galil_motor_withwrappers.template $
# $Revision: #1 $
# $DateTime: 2012/03/19 12:39:43 $
# $Author: cliftm $
#
# Description
# Template file for motor records
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# Licence as published by the Free Software Foundation; either
# version 2.1 of the Licence, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public Licence for more details.
#
# You should have received a copy of the GNU Lesser General Public
# Licence along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
#
# Contact details:
# mark.clift@synchrotron.org.au
# 800 Blackburn Road, Clayton, Victoria 3168, Australia.
#

grecord(motor,"$(P):$(M)")
{
	field(ASG, "$(ASG=DEFAULT)")
	field(DTYP,"asynMotor")
	field(VMAX,"$(VMAX)")
	field(VBAS,"0")
	field(VELO,"$(VELO)")
	field(ACCL,"$(ACCL)")
	field(BDST,"$(BDST)")
	field(BVEL,"$(BVEL)")
	field(BACC,"$(BACC)")
	field(HVEL,"$(VELO)")
	field(OUT, "@asyn($(PORT),$(ADDR))")
	field(MRES,"$(MRES)")
	field(ERES,"$(ERES)")
	field(PREC,"$(PREC)")
	field(EGU,"$(EGU)")
	field(DHLM,"$(DHLM)")
	field(DLLM,"$(DLLM)")
	field(UEIP,"$(UEIP)")
    field(SREV,"$(SREV)")
	field(OFF,"$(OFF)")
	field(RTRY,"$(RTRY)")
	field(TWV,"1")
	field(DESC,"$(DESC)")
	field(SCAN,"Passive")
	field(FOFF,"1")
# PID gains
	field(PCOF,"$(PCOF)")
	field(ICOF,"$(ICOF)")
	field(DCOF,"$(DCOF)")
	field(HLSV,"MINOR")
	info(archive,"0.02 VAL RBV DVAL OFF MSTA DIR CNEN MOVN DMOV MISS RCNT")
	info(alarm,"Motors")
}

alias("$(P):$(M)", "$(P):$(M):SP")

alias("$(P):$(M)", "$(P):$(M):SP:RBV")

record(transform,"$(P):$(M)_ableput") {
  field(CLCB,"a")
  field(CLCC,"a")
  field(OUTA,"$(P):$(M).DISA NPP NMS")
  field(OUTB,"$(P):$(M).DISP NPP NMS")
  field(OUTC,"$(P):$(M).DISA NPP NMS")
}

record(bo,"$(P):$(M)_able") {
  field(DESC,"motor enable")
  field(PINI,"YES")
  field(OUT,"$(P):$(M)_ableput.A PP MS")
  field(ZNAM,"Enable")
  field(ONAM,"Disable")
}

record(transform,"$(P):$(M)_lockput") {
  field(CLCB, "a = 0 ? 3 : 0")
  field(CMTB, "SPMG value")
  field(CMTA, "locked value")
  field(CLCC,"b")
  field(CLCD,"a")
  field(CLCE,"b")
  field(OUTC,"$(P):$(M).SPMG NPP NMS")
  field(OUTD,"$(P):$(M).DISP NPP NMS")
  field(OUTE,"$(P):$(M).SPMG NPP NMS")
}

record(bo,"$(P):$(M)_lock") {
  field(DESC,"Motor lock")
#  field(PINI,"YES")
  field(OUT,"$(P):$(M)_lockput.A PP MS")
  field(ZNAM,"Unlocked")
  field(ONAM,"Locked")
}

# Allow the motor position to be set in the controller from a single pv
record(ai, "$(P):$(M)_SET_POSITION_IN_CONTROLLER") {
  field(ASG, "MANAGER")
  field(DESC, "Set user position by pushing it to the motor")  
  field(FLNK, "$(P):$(M)_SET_POSITION_IN_CONTROLLER_SEQ")
  field(PREC, 3)
  field(EGU, "")
  info(archive, "VAL")
}

record(mbbi, "$(P):$(M)_FOFF_STORE")
{
   field(DESC, "Store original value for frozen")
   field(ZRST, "Variable")
   field(ONST, "Frozen")
}

record(sseq, "$(P):$(M)_SET_POSITION_IN_CONTROLLER_SEQ") {
  field(ASG, "MANAGER")
  field(DESC, "User position sequence")
  field(SELM, "All")

  # Store frozen value
  field(DOL1, "$(P):$(M).FOFF PP")
  field(LNK1, "$(P):$(M)_FOFF_STORE")
  field(WAIT1, "Wait")
 
  # Make offset frozen so that value is set in motor
  field(DO2, "1") 
  field(LNK2, "$(P):$(M).FOFF PP")
  field(WAIT2, "Wait")
 
  # Set the set to set
  field(DO3, "1")
  field(LNK3, "$(P):$(M).SET PP")
  field(WAIT3, "Wait")
  
  # Set the value
  field(DOL4, "$(P):$(M)_SET_POSITION_IN_CONTROLLER")
  field(LNK4, "$(P):$(M) PP")
  field(WAIT4, "Wait")
 
  # Set the set value back to use
  field(DO5, "0")
  field(LNK5, "$(P):$(M).SET PP")
  field(WAIT5, "Wait")

  # Make frozen offset as it was originally
  field(DOL6, "$(P):$(M)_FOFF_STORE") 
  field(LNK6, "$(P):$(M).FOFF PP")
  field(WAIT6, "Wait")
}}

# end
